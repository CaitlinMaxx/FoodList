{"ast":null,"code":"import _slicedToArray from \"/Users/caitlinmaxx/Coding Boot Camp/Homework/22.0 Project 3/FoodList/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/caitlinmaxx/Coding Boot Camp/Homework/22.0 Project 3/FoodList/client/src/pages/Add.js\";\nimport React, { useState } from 'react';\n\nfunction Add() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        food = _useState2[0],\n        setfood = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        foodName = _useState4[0],\n        setFoodName = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        foodGroup = _useState6[0],\n        setFoodGroup = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        mealType = _useState8[0],\n        setMealType = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        ingredient = _useState10[0],\n        setIngredient = _useState10[1];\n\n  const _useState11 = useState([]),\n        _useState12 = _slicedToArray(_useState11, 2),\n        ingredientslist = _useState12[0],\n        setIngredientslist = _useState12[1];\n\n  const _useState13 = useState([]),\n        _useState14 = _slicedToArray(_useState13, 2),\n        foodGrouplist = _useState14[0],\n        setfoodGrouplist = _useState14[1];\n\n  const handleFoodNameChange = event => {\n    // Destructure the name and value properties off of event.target\n    // Update the appropriate state\n    const value = event.target.value;\n    setFoodName(value);\n  };\n\n  const handleMealTypeChange = event => {\n    // Destructure the name and value properties off of event.target\n    // Update the appropriate state\n    const value = event.target.value;\n    setMealType(value);\n  };\n\n  const handleIngredientChange = event => {\n    // Destructure the name and value properties off of event.target\n    // Update the appropriate state\n    const value = event.target.value;\n    setIngredient(value);\n  };\n\n  const handleFoodGroupChange = event => {\n    // Destructure the name and value properties off of event.target\n    // Update the appropriate state\n    const value = event.target.value;\n    setFoodGroup(value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body addCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"exampleFormControlInput1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"Food Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    className: \"form-control\",\n    id: \"exampleFormControlInput1\",\n    name: \"foodName\",\n    value: foodName,\n    onChange: handleFoodNameChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"exampleFormControlSelect1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"Meal Type\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    id: \"exampleFormControlSelect1\",\n    name: \"mealType\",\n    value: mealType,\n    onChange: handleMealTypeChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Main Meal\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Small Meal\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Snack\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"exampleFormControlSelect1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Food Group\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    id: \"exampleFormControlSelect2\",\n    name: \"foodGroup\",\n    value: foodGroup,\n    onChange: handleFoodGroupChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Grains/Carbs\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Vegetables\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Fruit\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"Calcium\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Protein\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append foodgroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-outline-secondary\",\n    type: \"button\",\n    id: \"button-addon2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"Add\")), !foodGrouplist.length ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, foodGrouplist.map(foodGroup => {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, \"- \", foodGroup);\n  }))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Ingredients\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    \"aria-label\": \"Recipient's username\",\n    \"aria-describedby\": \"button-addon2\",\n    name: \"ingredient\",\n    value: ingredient,\n    onChange: handleIngredientChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-outline-secondary\",\n    type: \"button\",\n    id: \"button-addon2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"Add\")), !ingredientslist.length ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, ingredientslist.map(ingredient => {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, \"- \", ingredient);\n  })))));\n}\n\nexport default Add;","map":{"version":3,"sources":["/Users/caitlinmaxx/Coding Boot Camp/Homework/22.0 Project 3/FoodList/client/src/pages/Add.js"],"names":["React","useState","Add","food","setfood","foodName","setFoodName","foodGroup","setFoodGroup","mealType","setMealType","ingredient","setIngredient","ingredientslist","setIngredientslist","foodGrouplist","setfoodGrouplist","handleFoodNameChange","event","value","target","handleMealTypeChange","handleIngredientChange","handleFoodGroupChange","length","map"],"mappings":"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","sourcesContent":["import React , { useState } from 'react';\n\n\n\nfunction Add() {\n  \n  const [food, setfood] = useState([]);\n  const [foodName, setFoodName] = useState(\"\");\n  const [foodGroup, setFoodGroup] = useState(\"\");\n  const [mealType, setMealType] = useState(\"\");\n  const [ingredient, setIngredient] = useState(\"\");\n  const [ingredientslist, setIngredientslist] = useState([]);\n  const [foodGrouplist, setfoodGrouplist] = useState([]);\n\n\n  const handleFoodNameChange = event => {\n    // Destructure the name and value properties off of event.target\n    // Update the appropriate state\n    const { value } = event.target;\n    setFoodName(value);\n  };\n  const handleMealTypeChange = event => {\n    // Destructure the name and value properties off of event.target\n    // Update the appropriate state\n    const { value } = event.target;\n    setMealType(value);\n  };\n  const handleIngredientChange = event => {\n    // Destructure the name and value properties off of event.target\n    // Update the appropriate state\n    const { value } = event.target;\n    setIngredient(value);\n  };\n  const handleFoodGroupChange = event => {\n    // Destructure the name and value properties off of event.target\n    // Update the appropriate state\n    const { value } = event.target;\n    setFoodGroup(value);\n  };\n\n  return (\n    <div className=\"card-body addCard\">\n      <form>\n        <div className=\"form-group\">\n          <label for=\"exampleFormControlInput1\">Food Name</label>\n          <input type=\"email\" className=\"form-control\" id=\"exampleFormControlInput1\" name=\"foodName\" value={foodName} onChange={handleFoodNameChange}/>\n        </div>\n        <div className=\"form-group\">\n          <label for=\"exampleFormControlSelect1\">Meal Type</label>\n          <select className=\"form-control\" id=\"exampleFormControlSelect1\" name=\"mealType\" value={mealType} onChange={handleMealTypeChange}>\n            <option>Main Meal</option>\n            <option>Small Meal</option>\n            <option>Snack</option>\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <label for=\"exampleFormControlSelect1\">Food Group</label>\n          <select className=\"form-control\" id=\"exampleFormControlSelect2\" name=\"foodGroup\" value={foodGroup} onChange={handleFoodGroupChange}>\n            <option>Grains/Carbs</option>\n            <option>Vegetables</option>\n            <option>Fruit</option>\n            <option>Calcium</option>\n            <option>Protein</option>\n          </select>\n          <div className=\"input-group-append foodgroup\">\n            <button className=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\">Add</button>\n          </div>\n          {!foodGrouplist.length ? (\n              <div></div>\n            ) : (\n              <div>\n                {foodGrouplist.map(foodGroup => {\n                  return (\n                    <p>- {foodGroup}</p>\n                  );\n                })}\n              </div>\n            )}\n        </div>\n        <p>Ingredients</p>\n        <div className=\"input-group mb-3\">\n          <input type=\"text\" className=\"form-control\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\" name=\"ingredient\" value={ingredient} onChange={handleIngredientChange}/>\n          <div className=\"input-group-append\">\n            <button className=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\">Add</button>\n          </div>\n          {!ingredientslist.length ? (\n              <div></div>\n            ) : (\n              <div>\n                {ingredientslist.map(ingredient => {\n                  return (\n                    <p>- {ingredient}</p>\n                  );\n                })}\n              </div>\n            )}\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Add;\n"]},"metadata":{},"sourceType":"module"}