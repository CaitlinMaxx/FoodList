{"ast":null,"code":"import _slicedToArray from \"/Users/caitlinmaxx/Coding Boot Camp/Homework/22.0 Project 3/FoodList/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/caitlinmaxx/Coding Boot Camp/Homework/22.0 Project 3/FoodList/client/src/pages/SearchCookedPage.js\";\nimport React, { useState } from \"react\";\nimport Button from \"../components/Button\";\nimport API from \"../utils/API\";\nimport { FoodList, FoodListItem } from \"../components/FoodList\";\nimport { Container, Row, Col } from \"../components/Grid\";\n\nfunction SearchMealPage() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        foodtype = _useState2[0],\n        setfoodtype = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        foodtypeSearch = _useState4[0],\n        setfoodtypeSearch = _useState4[1];\n\n  const handleInputChange = event => {\n    // Destructure the name and value properties off of event.target\n    // Update the appropriate state\n    const value = event.target.value;\n    setfoodtypeSearch(value);\n  };\n\n  const handleFormSubmit = event => {\n    // When the form is submitted, prevent its default behavior, get foods update the foods state\n    event.preventDefault();\n    API.getfoodtype(foodtypeSearch).then(res => setfoodtype(res.data)).catch(err => console.log(err));\n  };\n\n  function isCooked() {\n    if (foodtype.cooked === \"yes\") {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, \"Is this food Cooked: Yes\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      }, \"Is this food Cooked: No\");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"xs-9 sm-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }\n  }, \"Cooked or Uncooked\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mealinput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    id: \"exampleFormControlSelect1\",\n    name: \"foodtypeSearch\",\n    value: foodtypeSearch,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 23\n    }\n  }, \"yes\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 23\n    }\n  }, \"no\")))), /*#__PURE__*/React.createElement(Col, {\n    size: \"xs-3 sm-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleFormSubmit,\n    type: \"success\",\n    className: \"input-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, \"Search\"))))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"col-xs-12 resultscol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, !foodtype.length ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(FoodList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, foodtype.map(food => {\n    return /*#__PURE__*/React.createElement(FoodListItem, {\n      key: food.name,\n      name: food.name,\n      foodtype: food.foodtype,\n      foodGroup: food.foodGroup,\n      cooked: isCooked(),\n      ingredients: food.ingredients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    });\n  }))))));\n}\n\nexport default SearchMealPage;","map":{"version":3,"sources":["/Users/caitlinmaxx/Coding Boot Camp/Homework/22.0 Project 3/FoodList/client/src/pages/SearchCookedPage.js"],"names":["React","useState","Button","API","FoodList","FoodListItem","Container","Row","Col","SearchMealPage","foodtype","setfoodtype","foodtypeSearch","setfoodtypeSearch","handleInputChange","event","value","target","handleFormSubmit","preventDefault","getfoodtype","then","res","data","catch","err","console","log","isCooked","cooked","length","map","food","name","foodGroup","ingredients"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Button from \"../components/Button\";\nimport API from \"../utils/API\";\nimport { FoodList, FoodListItem } from \"../components/FoodList\";\nimport { Container, Row, Col } from \"../components/Grid\";\n\n\n\nfunction SearchMealPage() {\n\n  const [foodtype, setfoodtype] = useState([]);\n  const [foodtypeSearch, setfoodtypeSearch] = useState(\"\");\n\n  const handleInputChange = event => {\n    // Destructure the name and value properties off of event.target\n    // Update the appropriate state\n    const { value } = event.target;\n    setfoodtypeSearch(value);\n  };\n\n  const handleFormSubmit = event => {\n    // When the form is submitted, prevent its default behavior, get foods update the foods state\n    event.preventDefault();\n    API.getfoodtype(foodtypeSearch)\n      .then(res => setfoodtype(res.data))\n      .catch(err => console.log(err));\n  };\n\n  function isCooked() {\n        if (foodtype.cooked === \"yes\") {\n          return(\n            <p>Is this food Cooked: Yes</p>\n          )\n        }\n        else{\n            return(\n            <p>Is this food Cooked: No</p>\n            )\n        }\n      \n\n  }\n  \n\n  return (\n    <div>\n      \n      <Container>\n        <Row>\n          <Col size=\"md-12\">\n            <form>\n              <Container>\n                <br />\n                <Row>\n                  <Col size=\"xs-9 sm-10\">\n                  <p>Cooked or Uncooked</p>\n                  <div className=\"form-group mealinput\">\n                    <select className=\"form-control\" id=\"exampleFormControlSelect1\" name=\"foodtypeSearch\" value={foodtypeSearch} onChange={handleInputChange}>\n                      <option>yes</option>\n                      <option>no</option>\n                    </select>\n                  </div>\n                  </Col>\n                  <Col size=\"xs-3 sm-2\">\n                    <br/>\n                    <br/>\n                    <Button\n                      onClick={handleFormSubmit}\n                      type=\"success\"\n                      className=\"input-lg\"\n                    >\n                        Search\n                    </Button>\n                  </Col>\n                </Row>\n              </Container>\n            </form>\n          </Col>\n        </Row>\n        <Row>\n          <div class=\"col-xs-12 resultscol\">\n            {!foodtype.length ? (\n              <div></div>\n            ) : (\n              <FoodList>\n                {foodtype.map(food => {\n                  return (\n                    <FoodListItem\n                      key={food.name}\n                      name={food.name}\n                      foodtype={food.foodtype}\n                      foodGroup={food.foodGroup}\n                      cooked={isCooked()}\n                      ingredients={food.ingredients}\n                    />\n                  );\n                })}\n              </FoodList>\n            )}\n          </div>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default SearchMealPage;\n"]},"metadata":{},"sourceType":"module"}